<?php

namespace App\Http\Controllers;

use App\Models\Tag;
use Illuminate\Http\Request;

class TagController extends Controller
{
    // CrÃ©ation de la mÃ©thode list
    public function list ()
    {
        // Utilisation de la mÃ©thode all() grÃ¢ce Ã  l'hÃ©ritage
        $tags = Tag::all();
        // Retour automatique au format JSON ðŸ‘Œ

        if ($tags) {
            return $tags;
        } else {
            return response(null, 404);
        }
    }

    // CrÃ©ation de la mÃ©thode show($id)
    public function show($id)
    {
        // Utilisation de la mÃ©thode find($id) grÃ¢ce Ã  l'hÃ©ritage
        $tag = Tag::findOrFail($id);
        // Retour auto au format JSON
        return $tag;
    }

    // CrÃ©ation de la mÃ©thode create
    public function create(Request $request)
    {
        // var_dump($request); die;
        // Extraction des valeurs passÃ©es de la body de la requÃªte
        $label = $request->input('label');

        // On crÃ©e une nouvelle instance, puis on lui dÃ©finit la propriÃ©tÃ© name
        $tag = new Tag();
        $tag->label = $label;

        // On sauvegarde, puis on gÃ¨re la rÃ©ponse avec le code HTTP qui convient
        // 201 : Created
        // 500 : Internal Server Error
        $tag = $tag->saveOrFail();
        return $tag;
    }

    // MÃ©thode pour modifier les propriÃ©tÃ©s correspondant Ã  1 id dans la bdd
    public function update(Request $request, $id)
    {
        // recherche objet Ã  modifier
        $tag = Tag::findOrFail($id);

        // Extraction des valeurs passÃ©es de la body Ã  la requÃªte
        $label = $request->input('label');

        // set de la valeur de la propriÃ©tÃ© $name
        $tag->label = $label;

        $tag->updateOrFail();
        return $tag;
    }

    // CrÃ©ation mÃ©thode delete
    public function delete($id)
    {
        // recherche objet Ã  modifier
        $tag = Tag::findOrFail($id);

        // suppression dans la BDD
        // rÃ©ponse HTTP : 200 -> Delete
        // rÃ©ponse HTTP : 500 -> Internal Server Error
        $tag->deleteOrFail();
        return $tag;
    }
}
